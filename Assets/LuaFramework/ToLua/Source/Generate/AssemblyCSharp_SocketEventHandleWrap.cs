//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AssemblyCSharp_SocketEventHandleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AssemblyCSharp.SocketEventHandle), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("getInstance", getInstance);
		L.RegFunction("addResponse", addResponse);
		L.RegFunction("noticeDisConect", noticeDisConect);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("LoginCallBack", get_LoginCallBack, set_LoginCallBack);
		L.RegVar("CreateRoomCallBack", get_CreateRoomCallBack, set_CreateRoomCallBack);
		L.RegVar("JoinRoomCallBack", get_JoinRoomCallBack, set_JoinRoomCallBack);
		L.RegVar("StartGameNotice", get_StartGameNotice, set_StartGameNotice);
		L.RegVar("pickCardCallBack", get_pickCardCallBack, set_pickCardCallBack);
		L.RegVar("otherPickCardCallBack", get_otherPickCardCallBack, set_otherPickCardCallBack);
		L.RegVar("putOutCardCallBack", get_putOutCardCallBack, set_putOutCardCallBack);
		L.RegVar("otherUserJointRoomCallBack", get_otherUserJointRoomCallBack, set_otherUserJointRoomCallBack);
		L.RegVar("PengCardCallBack", get_PengCardCallBack, set_PengCardCallBack);
		L.RegVar("ChiCardCallBack", get_ChiCardCallBack, set_ChiCardCallBack);
		L.RegVar("GangCardCallBack", get_GangCardCallBack, set_GangCardCallBack);
		L.RegVar("HupaiCallBack", get_HupaiCallBack, set_HupaiCallBack);
		L.RegVar("FinalGameOverCallBack", get_FinalGameOverCallBack, set_FinalGameOverCallBack);
		L.RegVar("gangCardNotice", get_gangCardNotice, set_gangCardNotice);
		L.RegVar("btnActionShow", get_btnActionShow, set_btnActionShow);
		L.RegVar("outRoomCallback", get_outRoomCallback, set_outRoomCallback);
		L.RegVar("dissoliveRoomResponse", get_dissoliveRoomResponse, set_dissoliveRoomResponse);
		L.RegVar("gameReadyNotice", get_gameReadyNotice, set_gameReadyNotice);
		L.RegVar("micInputNotice", get_micInputNotice, set_micInputNotice);
		L.RegVar("messageBoxNotice", get_messageBoxNotice, set_messageBoxNotice);
		L.RegVar("serviceErrorNotice", get_serviceErrorNotice, set_serviceErrorNotice);
		L.RegVar("backLoginNotice", get_backLoginNotice, set_backLoginNotice);
		L.RegVar("RoomBackResponse", get_RoomBackResponse, set_RoomBackResponse);
		L.RegVar("cardChangeNotice", get_cardChangeNotice, set_cardChangeNotice);
		L.RegVar("offlineNotice", get_offlineNotice, set_offlineNotice);
		L.RegVar("onlineNotice", get_onlineNotice, set_onlineNotice);
		L.RegVar("giftResponse", get_giftResponse, set_giftResponse);
		L.RegVar("returnGameResponse", get_returnGameResponse, set_returnGameResponse);
		L.RegVar("gameFollowBanderNotice", get_gameFollowBanderNotice, set_gameFollowBanderNotice);
		L.RegVar("gameBroadcastNotice", get_gameBroadcastNotice, set_gameBroadcastNotice);
		L.RegVar("disConnetNotice", get_disConnetNotice, set_disConnetNotice);
		L.RegVar("contactInfoResponse", get_contactInfoResponse, set_contactInfoResponse);
		L.RegVar("hostUpdateDrawResponse", get_hostUpdateDrawResponse, set_hostUpdateDrawResponse);
		L.RegVar("zhanjiResponse", get_zhanjiResponse, set_zhanjiResponse);
		L.RegVar("zhanjiDetailResponse", get_zhanjiDetailResponse, set_zhanjiDetailResponse);
		L.RegVar("gameBackPlayResponse", get_gameBackPlayResponse, set_gameBackPlayResponse);
		L.RegVar("otherTeleLogin", get_otherTeleLogin, set_otherTeleLogin);
		L.RegVar("SetBankerId", get_SetBankerId, set_SetBankerId);
		L.RegFunction("ServerCallBackEvent", AssemblyCSharp_SocketEventHandle_ServerCallBackEvent);
		L.RegFunction("ServerDisconnectCallBackEvent", AssemblyCSharp_SocketEventHandle_ServerDisconnectCallBackEvent);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			AssemblyCSharp.SocketEventHandle o = AssemblyCSharp.SocketEventHandle.getInstance();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addResponse(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)ToLua.CheckObject(L, 1, typeof(AssemblyCSharp.SocketEventHandle));
			AssemblyCSharp.ClientResponse arg0 = (AssemblyCSharp.ClientResponse)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.ClientResponse));
			obj.addResponse(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int noticeDisConect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)ToLua.CheckObject(L, 1, typeof(AssemblyCSharp.SocketEventHandle));
			obj.noticeDisConect();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LoginCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.LoginCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index LoginCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CreateRoomCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.CreateRoomCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CreateRoomCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_JoinRoomCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.JoinRoomCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index JoinRoomCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_StartGameNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.StartGameNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index StartGameNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pickCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.pickCardCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pickCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_otherPickCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.otherPickCardCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index otherPickCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_putOutCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.putOutCardCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index putOutCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_otherUserJointRoomCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.otherUserJointRoomCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index otherUserJointRoomCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PengCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.PengCardCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PengCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ChiCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.ChiCardCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ChiCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GangCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.GangCardCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GangCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HupaiCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.HupaiCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HupaiCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FinalGameOverCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.FinalGameOverCallBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index FinalGameOverCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gangCardNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.gangCardNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gangCardNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_btnActionShow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.btnActionShow;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index btnActionShow on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_outRoomCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.outRoomCallback;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index outRoomCallback on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dissoliveRoomResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.dissoliveRoomResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dissoliveRoomResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameReadyNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.gameReadyNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gameReadyNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_micInputNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.micInputNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index micInputNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_messageBoxNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.messageBoxNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index messageBoxNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_serviceErrorNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.serviceErrorNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index serviceErrorNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_backLoginNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.backLoginNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index backLoginNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RoomBackResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.RoomBackResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RoomBackResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cardChangeNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.cardChangeNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cardChangeNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_offlineNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.offlineNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index offlineNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onlineNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.onlineNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onlineNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_giftResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.giftResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index giftResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_returnGameResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.returnGameResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index returnGameResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameFollowBanderNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.gameFollowBanderNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gameFollowBanderNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameBroadcastNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.gameBroadcastNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gameBroadcastNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_disConnetNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerDisconnectCallBackEvent ret = obj.disConnetNotice;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index disConnetNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_contactInfoResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.contactInfoResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index contactInfoResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hostUpdateDrawResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.hostUpdateDrawResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hostUpdateDrawResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_zhanjiResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.zhanjiResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index zhanjiResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_zhanjiDetailResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.zhanjiDetailResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index zhanjiDetailResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameBackPlayResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.gameBackPlayResponse;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gameBackPlayResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_otherTeleLogin(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.otherTeleLogin;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index otherTeleLogin on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SetBankerId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent ret = obj.SetBankerId;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SetBankerId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LoginCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.LoginCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index LoginCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CreateRoomCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.CreateRoomCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CreateRoomCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_JoinRoomCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.JoinRoomCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index JoinRoomCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_StartGameNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.StartGameNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index StartGameNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_pickCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.pickCardCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index pickCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_otherPickCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.otherPickCardCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index otherPickCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_putOutCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.putOutCardCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index putOutCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_otherUserJointRoomCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.otherUserJointRoomCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index otherUserJointRoomCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PengCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.PengCardCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PengCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ChiCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.ChiCardCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ChiCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GangCardCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.GangCardCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GangCardCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HupaiCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.HupaiCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HupaiCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FinalGameOverCallBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.FinalGameOverCallBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index FinalGameOverCallBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gangCardNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.gangCardNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gangCardNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_btnActionShow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.btnActionShow = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index btnActionShow on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_outRoomCallback(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.outRoomCallback = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index outRoomCallback on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dissoliveRoomResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.dissoliveRoomResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dissoliveRoomResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gameReadyNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.gameReadyNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gameReadyNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_micInputNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.micInputNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index micInputNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_messageBoxNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.messageBoxNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index messageBoxNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_serviceErrorNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.serviceErrorNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index serviceErrorNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_backLoginNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.backLoginNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index backLoginNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RoomBackResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.RoomBackResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RoomBackResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cardChangeNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.cardChangeNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index cardChangeNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_offlineNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.offlineNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index offlineNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onlineNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.onlineNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index onlineNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_giftResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.giftResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index giftResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_returnGameResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.returnGameResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index returnGameResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gameFollowBanderNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.gameFollowBanderNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gameFollowBanderNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gameBroadcastNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.gameBroadcastNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gameBroadcastNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_disConnetNotice(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerDisconnectCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerDisconnectCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerDisconnectCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerDisconnectCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerDisconnectCallBackEvent;
			}

			obj.disConnetNotice = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index disConnetNotice on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_contactInfoResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.contactInfoResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index contactInfoResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_hostUpdateDrawResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.hostUpdateDrawResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index hostUpdateDrawResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_zhanjiResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.zhanjiResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index zhanjiResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_zhanjiDetailResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.zhanjiDetailResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index zhanjiDetailResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gameBackPlayResponse(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.gameBackPlayResponse = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index gameBackPlayResponse on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_otherTeleLogin(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.otherTeleLogin = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index otherTeleLogin on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SetBankerId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AssemblyCSharp.SocketEventHandle obj = (AssemblyCSharp.SocketEventHandle)o;
			AssemblyCSharp.SocketEventHandle.ServerCallBackEvent arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AssemblyCSharp.SocketEventHandle.ServerCallBackEvent)ToLua.CheckObject(L, 2, typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func) as AssemblyCSharp.SocketEventHandle.ServerCallBackEvent;
			}

			obj.SetBankerId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SetBankerId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AssemblyCSharp_SocketEventHandle_ServerCallBackEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerCallBackEvent), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AssemblyCSharp_SocketEventHandle_ServerDisconnectCallBackEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerDisconnectCallBackEvent), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(AssemblyCSharp.SocketEventHandle.ServerDisconnectCallBackEvent), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

