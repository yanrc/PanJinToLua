//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MicroPhoneInputWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MicroPhoneInput), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("getInstance", getInstance);
		L.RegFunction("StartRecord", StartRecord);
		L.RegFunction("GetClipData", GetClipData);
		L.RegFunction("PlayClipData", PlayClipData);
		L.RegFunction("PlayClipDataBy", PlayClipDataBy);
		L.RegFunction("OnPointerDown", OnPointerDown);
		L.RegFunction("OnPointerUp", OnPointerUp);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			MicroPhoneInput o = MicroPhoneInput.getInstance();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartRecord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MicroPhoneInput obj = (MicroPhoneInput)ToLua.CheckObject<MicroPhoneInput>(L, 1);
			obj.StartRecord();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetClipData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MicroPhoneInput obj = (MicroPhoneInput)ToLua.CheckObject<MicroPhoneInput>(L, 1);
			byte[] o = obj.GetClipData();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayClipData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MicroPhoneInput obj = (MicroPhoneInput)ToLua.CheckObject<MicroPhoneInput>(L, 1);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			obj.PlayClipData(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayClipDataBy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MicroPhoneInput obj = (MicroPhoneInput)ToLua.CheckObject<MicroPhoneInput>(L, 1);
			obj.PlayClipDataBy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerDown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MicroPhoneInput obj = (MicroPhoneInput)ToLua.CheckObject<MicroPhoneInput>(L, 1);
			obj.OnPointerDown();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPointerUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MicroPhoneInput obj = (MicroPhoneInput)ToLua.CheckObject<MicroPhoneInput>(L, 1);
			obj.OnPointerUp();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

